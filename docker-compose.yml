version: "3.8"


services:
  auth-api:
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      # Dictionary-style environment variables
      JWT_SECRET: "myfancysecret"
      AUTH_API_PORT: "8081"
      # If your auth code references other variables:
      # USERS_API_ADDRESS: "http://users-api:8083"
    depends_on:
      - users-api
    networks:
      - app-network


  todos-api:
    build:
      context: ./todos-api
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      JWT_SECRET: "myfancysecret"
      REDIS_HOST: "redis-queue"
      REDIS_PORT: "6379"
      REDIS_CHANNEL: "log_channel"
      # If your Node code listens on 8082, make sure to do so in server.js
    depends_on:
      - redis-queue
    networks:
      - app-network


  users-api:
    build:
      context: ./users-api
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      SERVER_PORT: "8083"
      JWT_SECRET: "myfancysecret"
    networks:
      - app-network


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      PORT: "8080"
      # If your frontend code references these:
      AUTH_API_ADDRESS: "http://auth-api:8081"
      TODOS_API_ADDRESS: "http://todos-api:8082"
      # USERS_API_ADDRESS: "http://users-api:8083"
    depends_on:
      - auth-api
      - todos-api
      - users-api
    networks:
      - app-network


  log-message-processor:
    build:
      context: ./log-message-processor
      dockerfile: Dockerfile
    environment:
      REDIS_HOST: "redis-queue"
      REDIS_PORT: "6379"
      REDIS_CHANNEL: "log_channel"
      # Optional if you use Zipkin:
      # ZIPKIN_URL: "http://zipkin:9411/api/v2/spans"
    depends_on:
      - redis-queue
    networks:
      - app-network


  redis-queue:
    image: redis:alpine
    container_name: redis-queue
    # If you want external access to Redis from host, uncomment:
    # ports:
    #   - "6379:6379"
    networks:
      - app-network


networks:
  app-network:
    driver: bridge
